What happens when you itintialize a repository and why do you need it?
A repository is where all of my tracked and untracked files are located 
on the local disk. Contrary to what I thought, I have not pushed 
anything to the GitHub cloud yet. I need to initialize a repository 
because that is how GitBash is going to be able to tell GitHub 
where the tracked files are located on the local disk. Also, the repository
has the hidden files and meta data necessary to track changes in files located
inside the repository, unlike a standard directory, which only contains the
saved files on the hard disk. 

How is the staging are adifferent from the working directory and the repository?
What value do you think it offers?
The staging area is different from the working directory because it is a happy 
medium between the actual files and the commit stage. At this point you aren't changing
anything. You are just organizing. The staging area you to allows you to set up and organize
logical changes in a way that makes sense and provides clarity to anyone working
on the same repository as you. It adds value to the git interface by allowing you to
work independently of the working directory. 

How can you use the staging area to make sure you have one commit per logical change?
The staging area can be used to ensure you are only making one logical change per
commit by letting you see which files are in the working directory, which files
have been staged, and which files are in the most recent commits. You are able
to compare each environment to make sure the changes in the staging area are changes
you want committed before hand. This is another facet of the organizational
aspect that I mentioned before. Git's staging area is great for making sure
only the things you want committed get commited. Running <emphasis>git status</emphasis>
will let you see and git diff without arguments will let you compare the working 
directory to the staging area and git diff --staged will let you compare your
staged files to the most recent commit. Very useful. 

